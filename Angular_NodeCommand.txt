node --version
ng --version
npm -v
npm install -g @angular/cli 	//To install Angular CLI
ng new first-app
npm start /ng serve
ng g c <name> -it -is // for creating new component
ng g s <name>// for creating new service
ng g guard
ng serve --port 4300

angular version 9.1.5
ng build --aot --prod --build-optimizer=true --vendor-chunk=generate-trusted-ssl-certificate

npm install -g @angular/cli  #install latest version of angular/cli
ng update @angular/cli  #Update to latest version
npm uninstall -g @angular/cli    #Uninstall the previous version
npm cache clean
npm install --save bootstrap 
npm install --save @ng-bootstrap/ng-bootstrap //for modal "@ng-bootstrap/ng-bootstrap": "~5.2.2" // if ng bootsrap doesnt work
npm i
npm install --save multer //for file upload
npm install --save bcrypt //bcrypt
npm install --save jsonwebtoken
npm install --save fs-extra
npm install ngx-spinner --save //for loading spinner
npm install --save ngx-bootstrap
npm install ngx-pagination --save
ng serve --host 0.0.0.0
ng serve --host 0.0.0.0 --ssl true
ng serve  ssl true — ssl-cert ssl/server.crt — ssl-key ssl/server.key — proxy-config proxy.config.json

npm install quill@1.3.6 ngx-quill --save-dev
npm install ckeditor4-angular
npm install quill

npm install ng-multiselect-dropdown --save
npm install time-ago-pipe --save

// Important imports modules
import {ReactiveFormsModule} from '@angular/forms';
import {HttpClientModule} from '@angular/common/http'
import { HttpClient } from '@angular/common/http';

import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';
import { catchError, map } from "rxjs/operators";
import { throwError, Observable } from "rxjs";
import { Avenger } from './avenger';
import { Router } from '@angular/router';

npm uninstall -g @angular/cli
npm cache clean
# if npm version is > 5 then use `npm cache verify` to avoid errors (or to avoid using --force)
npm install -g @angular/cli@latest

SSL
1st method
git clone https://github.com/RubenVermeulen/generate-trusted-ssl-certificate.git
bash generate.sh

"options": {
            "browserTarget": "demo1:build",
            "sslKey": "ssl/server.key",
            "sslCert": "ssl/server.crt"
          },

2nd method
npm install browser-sync --save-dev
ng serve --ssl true --host 0.0.0.0 --ssl-key /node_modules/browser-sync/lib/server/certs/server.key --ssl-cert /node_modules/browser-sync/lib/server/certs/server.crt